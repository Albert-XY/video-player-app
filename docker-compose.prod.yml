version: '3'

services:
  app:
    image: ${DOCKERHUB_USERNAME:-albertxy}/video-player-app:latest
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
      - "5000:5000"
      - "3000:3000"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/video_player_db
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER:-postgres}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD:-123456}
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
      - SPRING_DATASOURCE_CONTINUE_ON_ERROR=false
      - APP_MOCK_SERVICE_ENABLED=false
      - DATABASE_URL=postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-123456}@db:5432/video_player_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - NEXT_PUBLIC_API_URL=http://localhost:8080
    depends_on:
      - db
      - redis
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health-check"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=video_player_db
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-123456}
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 添加MongoDB服务为爬虫提供存储
  mongodb:
    image: mongo:4.4
    volumes:
      - mongo_data:/data/db
    restart: always
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  # 添加视频爬虫服务
  spider:
    build:
      context: .
      dockerfile: docker/spider.Dockerfile
    volumes:
      - video_data:/app/downloads
    depends_on:
      - mongodb
      - db
    environment:
      - MONGO_URI=mongodb://mongodb:27017
      - MONGO_DB=video_db
      - DB_NAME=video_player_db
      - DB_USER=${POSTGRES_USER:-postgres}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-123456}
      - DB_HOST=db
      - DB_PORT=5432
    restart: on-failure

  redis:
    image: redis:6
    volumes:
      - redis_data:/data
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:
  mongo_data:
  video_data:

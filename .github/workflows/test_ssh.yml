name: 测试SSH连接

on:
  workflow_dispatch:  # 手动触发
  
jobs:
  test-ssh:
    runs-on: ubuntu-latest
    
    steps:
    # 步骤 1：检出代码
    - name: 检出代码
      uses: actions/checkout@v3
      
    # 步骤 2：设置调试环境
    - name: 设置SSH调试
      run: |
        echo "开始SSH连接测试..."
        echo "正在设置SSH调试环境..."
        mkdir -p ~/.ssh
        echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/test_key
        chmod 600 ~/.ssh/test_key
        
        # 检查密钥格式
        echo "SSH密钥前5行:"
        head -n 5 ~/.ssh/test_key
        echo "SSH密钥后5行:"
        tail -n 5 ~/.ssh/test_key
        echo "密钥类型:"
        ssh-keygen -l -f ~/.ssh/test_key || echo "无法读取密钥格式，可能是格式问题"
        
    # 步骤 3：尝试SSH连接 - 使用ssh命令
    - name: 测试SSH连接
      run: |
        # 添加服务器到已知主机
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
        
        # 使用-v参数输出详细日志
        echo "尝试基本连接测试..."
        ssh -v -i ~/.ssh/test_key -o StrictHostKeyChecking=no ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} "echo '连接成功'; pwd; whoami" || echo "直接SSH连接失败"
      continue-on-error: true
      
    # 步骤 4：使用不同的SSH Action测试
    - name: 测试AppleSSH连接
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: 22
        debug: true
        script: |
          echo "AppleSSH连接测试"
          pwd
          whoami
      continue-on-error: true
      
    # 步骤 5：使用另一个SSH Action
    - name: 测试另一个SSH Action
      uses: garygrossgarten/github-action-ssh@release
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        privateKey: ${{ secrets.SERVER_SSH_KEY }}
        command: echo "GarySSH连接测试"; pwd; whoami
      continue-on-error: true

name: 视频播放器应用测试流程

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  frontend-test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: 设置Node.js环境
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: 安装依赖
        run: |
          npm install --legacy-peer-deps
          npm install -D vitest jsdom @testing-library/react @testing-library/jest-dom @vitest/coverage-v8 @vitejs/plugin-react --legacy-peer-deps
      
      - name: 运行Vitest前端测试
        run: npm run test:docker
      
      - name: 上传测试覆盖率报告
        uses: actions/upload-artifact@v3
        with:
          name: frontend-coverage
          path: coverage/
  
  backend-test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: 设置Java环境
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: 使用Maven缓存
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      
      - name: 运行Java后端测试
        run: |
          cd backend
          mvn test
  
  docker-test:
    runs-on: ubuntu-latest
    needs: [frontend-test, backend-test]
    
    steps:
      - uses: actions/checkout@v3
      
      - name: 设置Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: 构建前端测试容器
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/test.Dockerfile
          target: frontend-test
          push: false
          tags: video-player-app-frontend-test:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: 构建后端测试容器
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/test.Dockerfile
          target: backend-test
          push: false
          tags: video-player-app-backend-test:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
